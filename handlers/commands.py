from aiogram import html, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from db.users import create_user, find_user_by_username
from states.create_document import CreateDocument

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    username = message.from_user.username
    name = message.from_user.first_name

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.first_name)}! üëã\n\n"
                         "–≠—Ç–æ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞, –±—É–¥—å—Ç–µ —Ç–µ—Ä–ø–∏–º–µ–π\n\n"
                         "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É -- /newdoc\n"
                         "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è -- /about\n\n"
                         f"–ë–∞–≥–∏ {html.bold('/')} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ {html.bold('/')} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - @yastrebbov")

    user = await find_user_by_username(username)

    if not user:
        await create_user(username, name)


@router.message(Command('about'))
async def help_me(message: Message):
    await message.answer(text='–ü–æ–º–æ–≥–ª–∏ –∫–∞–∫ —Å–º–æ–≥–ª–∏ (—Ä–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)...')


@router.message(Command('newdoc'))
async def create_document(message: Message, state: FSMContext):
    await state.set_state(CreateDocument.document_name)
    await message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ ‚úèÔ∏è')